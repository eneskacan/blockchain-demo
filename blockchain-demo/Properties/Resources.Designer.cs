//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace blockchain_demo.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("blockchain_demo.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;server&quot;: {
        ///    &quot;baseDir&quot;: [
        ///      &quot;./src&quot;,
        ///      &quot;./build/contracts&quot;
        ///    ],
        ///    &quot;routes&quot;: {
        ///      &quot;/vendor&quot;: &quot;./node_modules&quot;
        ///    }
        ///  }
        ///}.
        /// </summary>
        public static string bs_config {
            get {
                return ResourceManager.GetString("bs_config", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to pragma solidity ^0.5.0;
        ///
        ///contract #coin_name# {
        ///    mapping (address =&gt; uint) balances;
        ///
        ///    event Transfer(address indexed _from, address indexed _to, uint256 _value);
        ///
        ///    constructor() public {
        ///        balances[tx.origin] = #total_amount# ;
        ///    }
        ///
        ///    function sendCoin(address receiver, uint amount) public returns(bool sufficient) {
        ///        if (balances[msg.sender] &lt; amount) return false;
        ///        balances[msg.sender] -= amount;
        ///        balances[receiver] += amount;
        ///        emit Transfer(ms [rest of string was truncated]&quot;;.
        /// </summary>
        public static string coin_source {
            get {
                return ResourceManager.GetString("coin_source", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to start /wait cmd /k &quot;truffle compile &amp; exit&quot;
        ///start /wait cmd /k &quot;truffle deploy &amp; exit&quot;.
        /// </summary>
        public static string deploy {
            get {
                return ResourceManager.GetString("deploy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to var #coin_name# = artifacts.require(&quot;./#coin_name#.sol&quot;);
        ///
        ///module.exports = function(deployer) {
        ///  deployer.deploy(#coin_name#);
        ///};.
        /// </summary>
        public static string deploy_source {
            get {
                return ResourceManager.GetString("deploy_source", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE COIN &lt;coinname&gt; (creates a new coin)
        ///SET TOTAL AMOUNT AS &lt;value&gt; (sets coin&apos;s total amount)
        ///DEPLOY PROJECT (deploys project)
        ///CREATE USER &lt;username&gt; (creates a user)
        ///SET BALANCE OF &lt;username&gt; AS &lt;value&gt; (sets user&apos;s balance)
        ///GET BALANCE OF &lt;username&gt; (returns balance of the user).
        /// </summary>
        public static string help__message {
            get {
                return ResourceManager.GetString("help_ message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to var Migrations = artifacts.require(&quot;./Migrations.sol&quot;);
        ///
        ///module.exports = function(deployer) {
        ///  deployer.deploy(Migrations);
        ///};.
        /// </summary>
        public static string initial_migration {
            get {
                return ResourceManager.GetString("initial_migration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to pragma solidity &gt;=0.4.21 &lt;0.6.0;
        ///
        ///contract Migrations {
        ///  address public owner;
        ///  uint public last_completed_migration;
        ///
        ///  constructor() public {
        ///    owner = msg.sender;
        ///  }
        ///
        ///  modifier restricted() {
        ///    if (msg.sender == owner) _;
        ///  }
        ///
        ///  function setCompleted(uint completed) public restricted {
        ///    last_completed_migration = completed;
        ///  }
        ///
        ///  function upgrade(address new_address) public restricted {
        ///    Migrations upgraded = Migrations(new_address);
        ///    upgraded.setCompleted(last_compl [rest of string was truncated]&quot;;.
        /// </summary>
        public static string migrations {
            get {
                return ResourceManager.GetString("migrations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;name&quot;: &quot;Coin Generator&quot;,
        ///  &quot;version&quot;: &quot;1.0.0&quot;,
        ///  &quot;description&quot;: &quot;Blockchain Todo List Powered By Ethereum&quot;,
        ///  &quot;main&quot;: &quot;truffle-config.js&quot;,
        ///  &quot;directories&quot;: {
        ///    &quot;test&quot;: &quot;test&quot;
        ///  },
        ///  &quot;scripts&quot;: {
        ///    &quot;dev&quot;: &quot;lite-server&quot;,
        ///    &quot;test&quot;: &quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; sexit 1&quot;
        ///  },
        ///  &quot;author&quot;: &quot;enes.kacan@agu.edu.tr&quot;,
        ///  &quot;license&quot;: &quot;ISC&quot;,
        ///  &quot;devDependencies&quot;: {
        ///    &quot;bootstrap&quot;: &quot;4.1.3&quot;,
        ///    &quot;chai&quot;: &quot;^4.1.2&quot;,
        ///    &quot;chai-as-promised&quot;: &quot;^7.1.1&quot;,
        ///    &quot;chai-bignumber&quot;: &quot;^2.0.2&quot;,
        ///    &quot;li [rest of string was truncated]&quot;;.
        /// </summary>
        public static string package {
            get {
                return ResourceManager.GetString("package", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;name&quot;: &quot;eth-todo-list&quot;,
        ///  &quot;version&quot;: &quot;1.0.0&quot;,
        ///  &quot;lockfileVersion&quot;: 1,
        ///  &quot;requires&quot;: true,
        ///  &quot;dependencies&quot;: {
        ///    &quot;abbrev&quot;: {
        ///      &quot;version&quot;: &quot;1.1.1&quot;,
        ///      &quot;resolved&quot;: &quot;https://registry.npmjs.org/abbrev/-/abbrev-1.1.1.tgz&quot;,
        ///      &quot;integrity&quot;: &quot;sha512-nne9/IiQ/hzIhY6pdDnbBtz7DjPTKrY00P/zvPSm5pOFkl6xuGrGnXn/VtTNNfNtAfZ9/1RtehkszU9qcTii0Q==&quot;,
        ///      &quot;dev&quot;: true
        ///    },
        ///    &quot;accepts&quot;: {
        ///      &quot;version&quot;: &quot;1.3.5&quot;,
        ///      &quot;resolved&quot;: &quot;https://registry.npmjs.org/accepts/-/accepts-1.3.5.tgz&quot;,
        ///     [rest of string was truncated]&quot;;.
        /// </summary>
        public static string package_lock {
            get {
                return ResourceManager.GetString("package_lock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to module.exports = {
        ///  networks: {
        ///    development: {
        ///      host: &quot;127.0.0.1&quot;,
        ///      port: 7545,
        ///      network_id: &quot;*&quot; // Match any network id
        ///    }
        ///  },
        ///  solc: {
        ///    optimizer: {
        ///      enabled: true,
        ///      runs: 200
        ///    }
        ///  }
        ///}.
        /// </summary>
        public static string truffle_config {
            get {
                return ResourceManager.GetString("truffle_config", resourceCulture);
            }
        }
    }
}
